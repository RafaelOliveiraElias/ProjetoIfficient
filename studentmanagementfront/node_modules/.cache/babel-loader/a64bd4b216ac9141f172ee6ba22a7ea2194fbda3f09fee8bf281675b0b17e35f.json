{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rafael.elias\\\\source\\\\repos\\\\StudentManagementFront\\\\studentmanagementfront\\\\src\\\\components\\\\StudentDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Card, CardBody, CardTitle, CardText, Spinner } from \"reactstrap\";\nimport { useParams } from \"react-router-dom\"; // Para acessar os parâmetros da URL\nimport { getStudentByRegistration } from \"../services/api\"; // Função para pegar os detalhes do aluno\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StudentDetails = () => {\n  _s();\n  const {\n    registration\n  } = useParams(); // Pegando a matrícula da URL\n  const [student, setStudent] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchStudentDetails = async () => {\n      try {\n        const response = await getStudentByRegistration(registration); // Passando a matrícula\n        setStudent(response.data); // Atualiza o estado com os detalhes do aluno\n      } catch (error) {\n        console.error(\"Erro ao buscar os detalhes do aluno\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchStudentDetails();\n  }, [registration]); // Recarrega quando a matrícula mudar\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {\n      color: \"primary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Detalhes do Aluno\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), student ? /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(CardBody, {\n        children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n          tag: \"h5\",\n          children: student.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CardText, {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Matr\\xEDcula:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 23\n          }, this), \" \", student.registration]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CardText, {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Nota M\\xE9dia:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 23\n          }, this), \" \", student.average]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Aluno n\\xE3o encontrado.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(StudentDetails, \"+nEZfLPNYu6oZrdMrkY2csa9p3A=\", false, function () {\n  return [useParams];\n});\n_c = StudentDetails;\nexport default StudentDetails;\nvar _c;\n$RefreshReg$(_c, \"StudentDetails\");","map":{"version":3,"names":["React","useState","useEffect","Card","CardBody","CardTitle","CardText","Spinner","useParams","getStudentByRegistration","jsxDEV","_jsxDEV","StudentDetails","_s","registration","student","setStudent","loading","setLoading","fetchStudentDetails","response","data","error","console","color","fileName","_jsxFileName","lineNumber","columnNumber","children","tag","name","average","_c","$RefreshReg$"],"sources":["C:/Users/rafael.elias/source/repos/StudentManagementFront/studentmanagementfront/src/components/StudentDetails.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Card, CardBody, CardTitle, CardText, Spinner } from \"reactstrap\";\nimport { useParams } from \"react-router-dom\";  // Para acessar os parâmetros da URL\nimport { getStudentByRegistration } from \"../services/api\";  // Função para pegar os detalhes do aluno\n\nconst StudentDetails = () => {\n  const { registration } = useParams(); // Pegando a matrícula da URL\n  const [student, setStudent] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchStudentDetails = async () => {\n      try {\n        const response = await getStudentByRegistration(registration); // Passando a matrícula\n        setStudent(response.data);  // Atualiza o estado com os detalhes do aluno\n      } catch (error) {\n        console.error(\"Erro ao buscar os detalhes do aluno\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchStudentDetails();\n  }, [registration]);  // Recarrega quando a matrícula mudar\n\n  if (loading) {\n    return <Spinner color=\"primary\" />;\n  }\n\n  return (\n    <div>\n      <h3>Detalhes do Aluno</h3>\n      {student ? (\n        <Card>\n          <CardBody>\n            <CardTitle tag=\"h5\">{student.name}</CardTitle>\n            <CardText><strong>Matrícula:</strong> {student.registration}</CardText>\n            <CardText><strong>Nota Média:</strong> {student.average}</CardText>\n          </CardBody>\n        </Card>\n      ) : (\n        <p>Aluno não encontrado.</p>\n      )}\n    </div>\n  );\n};\n\nexport default StudentDetails;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}