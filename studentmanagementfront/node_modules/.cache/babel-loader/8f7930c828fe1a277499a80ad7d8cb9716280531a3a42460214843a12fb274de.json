{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rafael.elias\\\\source\\\\repos\\\\StudentManagementFront\\\\studentmanagementfront\\\\src\\\\components\\\\StudentList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Table, Button, Input } from \"reactstrap\"; // Usando reactstrap para a tabela e o input\n\nimport { getSortedStudents } from \"../api\"; // Importando a função para buscar os alunos\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StudentList = () => {\n  _s();\n  const [students, setStudents] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [strategy, setStrategy] = useState(0); // Armazena a estratégia selecionada\n\n  useEffect(() => {\n    const fetchStudents = async () => {\n      try {\n        const response = await getSortedStudents(strategy); // Passando a estratégia escolhida\n        setStudents(response.data); // Supondo que a resposta seja um array de alunos\n      } catch (error) {\n        console.error(\"Erro ao buscar alunos\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchStudents();\n  }, [strategy]); // Recarrega quando a estratégia for alterada\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Carregando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Lista de Alunos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      type: \"select\",\n      value: strategy,\n      onChange: e => setStrategy(Number(e.target.value)),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: 0,\n        children: \"Bubble Sort\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: 1,\n        children: \"LINQ Sort\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      striped: true,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Matr\\xEDcula\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Nome\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Nota M\\xE9dia\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: students.map(student => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: student.registration\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: student.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: student.averageGrade\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this)]\n        }, student.registration, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(StudentList, \"3NEBr8YKACiMqS6cWsIqai7seNE=\");\n_c = StudentList;\nexport default StudentList;\nvar _c;\n$RefreshReg$(_c, \"StudentList\");","map":{"version":3,"names":["React","useState","useEffect","Table","Button","Input","getSortedStudents","jsxDEV","_jsxDEV","StudentList","_s","students","setStudents","loading","setLoading","strategy","setStrategy","fetchStudents","response","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","Number","target","striped","map","student","registration","name","averageGrade","_c","$RefreshReg$"],"sources":["C:/Users/rafael.elias/source/repos/StudentManagementFront/studentmanagementfront/src/components/StudentList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Table, Button, Input } from \"reactstrap\";  // Usando reactstrap para a tabela e o input\n\nimport { getSortedStudents } from \"../api\"; // Importando a função para buscar os alunos\n\nconst StudentList = () => {\n  const [students, setStudents] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [strategy, setStrategy] = useState(0); // Armazena a estratégia selecionada\n\n  useEffect(() => {\n    const fetchStudents = async () => {\n      try {\n        const response = await getSortedStudents(strategy); // Passando a estratégia escolhida\n        setStudents(response.data);  // Supondo que a resposta seja um array de alunos\n      } catch (error) {\n        console.error(\"Erro ao buscar alunos\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchStudents();\n  }, [strategy]);  // Recarrega quando a estratégia for alterada\n\n  if (loading) {\n    return <p>Carregando...</p>;\n  }\n\n  return (\n    <div>\n      <h2>Lista de Alunos</h2>\n      \n      {/* Dropdown para selecionar a estratégia de ordenação */}\n      <Input \n        type=\"select\" \n        value={strategy} \n        onChange={(e) => setStrategy(Number(e.target.value))} \n      >\n        <option value={0}>Bubble Sort</option>\n        <option value={1}>LINQ Sort</option>\n      </Input>\n\n      <Table striped>\n        <thead>\n          <tr>\n            <th>Matrícula</th>\n            <th>Nome</th>\n            <th>Nota Média</th>\n          </tr>\n        </thead>\n        <tbody>\n          {students.map((student) => (\n            <tr key={student.registration}>\n              <td>{student.registration}</td>\n              <td>{student.name}</td>\n              <td>{student.averageGrade}</td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n    </div>\n  );\n};\n\nexport default StudentList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}