{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rafael.elias\\\\source\\\\repos\\\\StudentManagementFront\\\\studentmanagementfront\\\\src\\\\components\\\\StudentList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Table, Button } from \"reactstrap\"; // Adicionando o Button\nimport { useNavigate } from \"react-router-dom\"; // Hook de navegação\nimport { getBestStudentsBySubject } from \"../services/api\"; // Função para buscar os melhores alunos por matéria\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BestStudentsList = () => {\n  _s();\n  const [bestStudents, setBestStudents] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate(); // Hook de navegação\n\n  useEffect(() => {\n    const fetchBestStudents = async () => {\n      try {\n        const response = await getBestStudentsBySubject();\n        setBestStudents(response.data);\n      } catch (error) {\n        console.error(\"Erro ao buscar melhores alunos\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchBestStudents();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Carregando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 12\n    }, this);\n  }\n  const handleStudentClick = registration => {\n    // Redireciona para o aluno selecionado com base na matrícula\n    navigate(`/student/${registration}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Melhores Alunos por Mat\\xE9ria\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      striped: true,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Mat\\xE9ria\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Aluno\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Nota\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"A\\xE7\\xE3o\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: bestStudents.map(best => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: best.subject\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: best.bestStudent.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: best.grade\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              color: \"primary\",\n              onClick: () => handleStudentClick(best.bestStudent.registration),\n              children: \"Ver Detalhes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this)]\n        }, best.subject, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(BestStudentsList, \"XO/ItAp7KZmuWQkpEwC/M7rav2c=\", false, function () {\n  return [useNavigate];\n});\n_c = BestStudentsList;\nexport default BestStudentsList;\nvar _c;\n$RefreshReg$(_c, \"BestStudentsList\");","map":{"version":3,"names":["React","useState","useEffect","Table","Button","useNavigate","getBestStudentsBySubject","jsxDEV","_jsxDEV","BestStudentsList","_s","bestStudents","setBestStudents","loading","setLoading","navigate","fetchBestStudents","response","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","handleStudentClick","registration","striped","map","best","subject","bestStudent","name","grade","color","onClick","_c","$RefreshReg$"],"sources":["C:/Users/rafael.elias/source/repos/StudentManagementFront/studentmanagementfront/src/components/StudentList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Table, Button } from \"reactstrap\";  // Adicionando o Button\nimport { useNavigate } from \"react-router-dom\"; // Hook de navegação\nimport { getBestStudentsBySubject } from \"../services/api\"; // Função para buscar os melhores alunos por matéria\n\nconst BestStudentsList = () => {\n  const [bestStudents, setBestStudents] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate(); // Hook de navegação\n\n  useEffect(() => {\n    const fetchBestStudents = async () => {\n      try {\n        const response = await getBestStudentsBySubject();\n        setBestStudents(response.data);\n      } catch (error) {\n        console.error(\"Erro ao buscar melhores alunos\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchBestStudents();\n  }, []);\n\n  if (loading) {\n    return <p>Carregando...</p>;\n  }\n\n  const handleStudentClick = (registration) => {\n    // Redireciona para o aluno selecionado com base na matrícula\n    navigate(`/student/${registration}`);\n  };\n\n  return (\n    <div>\n      <h2>Melhores Alunos por Matéria</h2>\n      <Table striped>\n        <thead>\n          <tr>\n            <th>Matéria</th>\n            <th>Aluno</th>\n            <th>Nota</th>\n            <th>Ação</th> {/* Coluna para o botão */}\n          </tr>\n        </thead>\n        <tbody>\n          {bestStudents.map((best) => (\n            <tr key={best.subject}>\n              <td>{best.subject}</td>\n              <td>{best.bestStudent.name}</td>\n              <td>{best.grade}</td>\n              <td>\n                {/* Botão para navegar para os detalhes do aluno */}\n                <Button color=\"primary\" onClick={() => handleStudentClick(best.bestStudent.registration)}>\n                  Ver Detalhes\n                </Button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n    </div>\n  );\n};\n\nexport default BestStudentsList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}