{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rafael.elias\\\\source\\\\repos\\\\StudentManagementFront\\\\studentmanagementfront\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Container, Button, Input, Table } from \"reactstrap\"; // Usando reactstrap para tabela e input\nimport { getSortedStudents } from \"./api\"; // Importando a função da API\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [students, setStudents] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [strategy, setStrategy] = useState(\"bubble\"); // Estratégia de ordenação: \"bubble\" ou \"linq\"\n\n  // Função para buscar alunos ordenados\n  const fetchStudents = async () => {\n    setLoading(true); // Inicia o carregamento dos dados\n    try {\n      const response = await getSortedStudents(strategy); // Passando a estratégia selecionada\n      setStudents(response.data); // Atualiza a lista de alunos com os dados retornados\n    } catch (error) {\n      console.error(\"Erro ao buscar alunos:\", error); // Caso ocorra erro\n    } finally {\n      setLoading(false); // Finaliza o carregamento dos dados\n    }\n  };\n  useEffect(() => {\n    fetchStudents(); // Chama a função para buscar os alunos assim que o componente for renderizado\n  }, [strategy]); // Quando a estratégia mudar, a requisição será refeita\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Carregando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 12\n    }, this); // Exibe enquanto carrega os dados\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Lista de Alunos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      type: \"select\",\n      value: strategy,\n      onChange: e => setStrategy(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"bubble\",\n        children: \"Bubble Sort\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"linq\",\n        children: \"LINQ Sort\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      striped: true,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Matr\\xEDcula\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Nome\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Nota M\\xE9dia\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: students.map(student => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: student.registration\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: student.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: student.averageGrade\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this)]\n        }, student.registration, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      color: \"primary\",\n      onClick: fetchStudents,\n      children: \"Atualizar Lista\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"iz394vqbWv+Asay5mknXAdEvhwI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Container","Button","Input","Table","getSortedStudents","jsxDEV","_jsxDEV","App","_s","students","setStudents","loading","setLoading","strategy","setStrategy","fetchStudents","response","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","striped","map","student","registration","name","averageGrade","color","onClick","_c","$RefreshReg$"],"sources":["C:/Users/rafael.elias/source/repos/StudentManagementFront/studentmanagementfront/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Container, Button, Input, Table } from \"reactstrap\";  // Usando reactstrap para tabela e input\nimport { getSortedStudents } from \"./api\";  // Importando a função da API\n\nconst App = () => {\n  const [students, setStudents] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [strategy, setStrategy] = useState(\"bubble\");  // Estratégia de ordenação: \"bubble\" ou \"linq\"\n\n  // Função para buscar alunos ordenados\n  const fetchStudents = async () => {\n    setLoading(true);  // Inicia o carregamento dos dados\n    try {\n      const response = await getSortedStudents(strategy);  // Passando a estratégia selecionada\n      setStudents(response.data);  // Atualiza a lista de alunos com os dados retornados\n    } catch (error) {\n      console.error(\"Erro ao buscar alunos:\", error);  // Caso ocorra erro\n    } finally {\n      setLoading(false);  // Finaliza o carregamento dos dados\n    }\n  };\n\n  useEffect(() => {\n    fetchStudents();  // Chama a função para buscar os alunos assim que o componente for renderizado\n  }, [strategy]);  // Quando a estratégia mudar, a requisição será refeita\n\n  if (loading) {\n    return <p>Carregando...</p>;  // Exibe enquanto carrega os dados\n  }\n\n  return (\n    <Container>\n      <h2>Lista de Alunos</h2>\n      \n      {/* Dropdown para selecionar a estratégia de ordenação */}\n      <Input \n        type=\"select\" \n        value={strategy} \n        onChange={(e) => setStrategy(e.target.value)} \n      >\n        <option value=\"bubble\">Bubble Sort</option>\n        <option value=\"linq\">LINQ Sort</option>\n      </Input>\n\n      {/* Tabela de alunos */}\n      <Table striped>\n        <thead>\n          <tr>\n            <th>Matrícula</th>\n            <th>Nome</th>\n            <th>Nota Média</th>\n          </tr>\n        </thead>\n        <tbody>\n          {students.map((student) => (\n            <tr key={student.registration}>\n              <td>{student.registration}</td>\n              <td>{student.name}</td>\n              <td>{student.averageGrade}</td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n\n      {/* Botão para forçar a atualização da lista */}\n      <Button color=\"primary\" onClick={fetchStudents}>\n        Atualizar Lista\n      </Button>\n    </Container>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}