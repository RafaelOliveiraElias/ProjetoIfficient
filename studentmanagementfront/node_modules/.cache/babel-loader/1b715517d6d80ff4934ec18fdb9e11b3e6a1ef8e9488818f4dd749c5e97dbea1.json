{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rafael.elias\\\\source\\\\repos\\\\StudentManagementFront\\\\studentmanagementfront\\\\src\\\\components\\\\BestStudentsList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Table, Input, Button } from \"reactstrap\"; // Adicionando o Button\nimport { useNavigate } from \"react-router-dom\"; // Usando para navegação\nimport { getSortedStudents } from \"../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StudentList = () => {\n  _s();\n  const [students, setStudents] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [strategy, setStrategy] = useState(0); // Armazena a estratégia selecionada\n  const navigate = useNavigate(); // Hook de navegação\n\n  useEffect(() => {\n    const fetchStudents = async () => {\n      try {\n        const response = await getSortedStudents(strategy);\n        setStudents(response.data);\n      } catch (error) {\n        console.error(\"Erro ao buscar alunos\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchStudents();\n  }, [strategy]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Carregando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 12\n    }, this);\n  }\n  const handleStudentClick = registration => {\n    // Redireciona para o aluno selecionado com base na matrícula\n    navigate(`/student/${registration}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      type: \"select\",\n      value: strategy,\n      onChange: e => setStrategy(Number(e.target.value)),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: 0,\n        children: \"Bubble Sort\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: 1,\n        children: \"LINQ Sort\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      striped: true,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Matr\\xEDcula\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Nome\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Nota M\\xE9dia\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"A\\xE7\\xE3o\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: students.map(student => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: student.registration\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: student.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: student.average\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              color: \"primary\",\n              onClick: () => handleStudentClick(student.registration),\n              children: \"Ver Detalhes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this)]\n        }, student.registration, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(StudentList, \"F/mw/edUl3BeGqhyv+Yo4cNQsGw=\", false, function () {\n  return [useNavigate];\n});\n_c = StudentList;\nexport default StudentList;\nvar _c;\n$RefreshReg$(_c, \"StudentList\");","map":{"version":3,"names":["React","useState","useEffect","Table","Input","Button","useNavigate","getSortedStudents","jsxDEV","_jsxDEV","StudentList","_s","students","setStudents","loading","setLoading","strategy","setStrategy","navigate","fetchStudents","response","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","handleStudentClick","registration","type","value","onChange","e","Number","target","striped","map","student","name","average","color","onClick","_c","$RefreshReg$"],"sources":["C:/Users/rafael.elias/source/repos/StudentManagementFront/studentmanagementfront/src/components/BestStudentsList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Table, Input, Button } from \"reactstrap\";  // Adicionando o Button\nimport { useNavigate } from \"react-router-dom\";  // Usando para navegação\nimport { getSortedStudents } from \"../services/api\";\n\nconst StudentList = () => {\n  const [students, setStudents] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [strategy, setStrategy] = useState(0); // Armazena a estratégia selecionada\n  const navigate = useNavigate(); // Hook de navegação\n\n  useEffect(() => {\n    const fetchStudents = async () => {\n      try {\n        const response = await getSortedStudents(strategy);\n        setStudents(response.data);\n      } catch (error) {\n        console.error(\"Erro ao buscar alunos\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchStudents();\n  }, [strategy]);\n\n  if (loading) {\n    return <p>Carregando...</p>;\n  }\n\n  const handleStudentClick = (registration) => {\n    // Redireciona para o aluno selecionado com base na matrícula\n    navigate(`/student/${registration}`);\n  };\n\n  return (\n    <div>\n      <Input \n        type=\"select\" \n        value={strategy} \n        onChange={(e) => setStrategy(Number(e.target.value))} \n      >\n        <option value={0}>Bubble Sort</option>\n        <option value={1}>LINQ Sort</option>\n      </Input>\n\n      <Table striped>\n        <thead>\n          <tr>\n            <th>Matrícula</th>\n            <th>Nome</th>\n            <th>Nota Média</th>\n            <th>Ação</th> {/* Coluna para o botão */}\n          </tr>\n        </thead>\n        <tbody>\n          {students.map((student) => (\n            <tr key={student.registration}>\n              <td>{student.registration}</td>\n              <td>{student.name}</td>\n              <td>{student.average}</td>\n              <td>\n                {/* Botão para navegar para os detalhes do aluno */}\n                <Button color=\"primary\" onClick={() => handleStudentClick(student.registration)}>\n                  Ver Detalhes\n                </Button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n    </div>\n  );\n};\n\nexport default StudentList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}